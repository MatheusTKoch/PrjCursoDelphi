unit uFrmLogin;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt,
  Data.DB, FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.ExtCtrls;

type
  TFormLogin = class(TForm)
    edtLogin: TEdit;
    edtSenha: TEdit;
    Label1: TLabel;
    Label2: TLabel;
    fdQryLogin: TFDQuery;
    btnCancelar: TButton;
    btnConfirmar: TButton;
    Panel1: TPanel;
    fdQryLoginLOGIN: TStringField;
    fdQryLoginSENHA: TStringField;
    procedure btnCancelarClick(Sender: TObject);
    procedure btnConfirmarClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure edtSenhaKeyPress(Sender: TObject; var Key: Char);
    procedure FormCreate(Sender: TObject);
  private
    FIniFileName: string;
    function Login(pLogin, pSenha: string): boolean;
    procedure ValidaLogin;
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FormLogin: TFormLogin;

implementation

{$R *.dfm}

uses uDmDados, uCrpt, uBiblioteca;

procedure TFormLogin.btnCancelarClick(Sender: TObject);
begin
  Application.Terminate;
end;

procedure TFormLogin.btnConfirmarClick(Sender: TObject);
begin
  ValidaLogin;
  SetValorIni(FIniFileName, 'USUARIO', 'ULTIMO_LOGIN', edtLogin.Text);
end;

procedure TFormLogin.edtSenhaKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #13 then
  begin
    ValidaLogin;
  end
  else
  if Key = #27 then
  begin
    Application.Terminate;
  end;
end;

procedure TFormLogin.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  if not Login(edtLogin.Text, edtSenha.Text) then
  begin

    Application.Terminate;
  end;

  Action := caFree;
end;

procedure TFormLogin.FormCreate(Sender: TObject);
begin
  FIniFileName := ExtractFilePath(Application.ExeName) + 'config.ini';
  edtLogin.Text := GetValorIni(ExtractFilePath(Application.ExeName) + 'config.ini', 'USUARIO', 'ULTIMO_LOGIN')
end;

function TFormLogin.Login(pLogin, pSenha: string): boolean;
begin
  Result := False;
  fdQryLogin.Close;
  fdQryLogin.ParamByName('LOGIN').AsAnsiString := pLogin;
  fdQryLogin.Open;

  fdQryLogin.First;
  while not fdQryLogin.Eof do
  begin
    if pSenha = Criptografa('D', fdQryLogin.FieldByName('SENHA').AsAnsiString) then
    begin
      Result := True;
      Break;
    end;
    fdQryLogin.Next;
  end;
end;

procedure TFormLogin.ValidaLogin;
begin
  if not Login(edtLogin.Text, edtSenha.Text) then
  begin
    MsgAtencao('Login incorreto!');
    Abort;
  end
  else
  begin
    Self.Close;
  end;
end;

end.
