-- CIDADE definição
CREATE TABLE CIDADE (
	ID_CIDADE INTEGER NOT NULL,
	NOME VARCHAR(60),
	DT_EXCLUIDO DATE,
	CONSTRAINT INTEG_4 PRIMARY KEY (ID_CIDADE)
);

-- ESTADO definição
CREATE TABLE ESTADO (
	ID_ESTADO INTEGER NOT NULL,
	NOME VARCHAR(60),
	SIGLA VARCHAR(2),
	DT_EXCLUIDO DATE,
	CONSTRAINT INTEG_6 PRIMARY KEY (ID_ESTADO)
);

-- USUARIO definição
CREATE TABLE USUARIO (
	NOME VARCHAR(40),
	LOGIN VARCHAR(20),
	SENHA VARCHAR(255),
	ID_USUARIO INTEGER NOT NULL,
	DT_EXCLUIDO DATE,
	CONSTRAINT INTEG_33 PRIMARY KEY (ID_USUARIO)
);

-- CLIENTE definição
CREATE TABLE CLIENTE (
	ID_CLIENTE INTEGER NOT NULL,
	RAZAO_SOCIAL VARCHAR(80),
	FANTASIA VARCHAR(80),
	CPF_CNPJ VARCHAR(20),
	TIPO_FJ VARCHAR(1),
	NOME VARCHAR(80),
	EMAIL VARCHAR(255),
	SITE VARCHAR(255),
	ENDERECO VARCHAR(255),
	COMPLEMENTO VARCHAR(40),
	NUMERO VARCHAR(20),
	BAIRRO VARCHAR(50),
	IE VARCHAR(30),
	IM VARCHAR(30),
	DT_EXCLUIDO DATE,
	ID_CIDADE INTEGER,
	ID_ESTADO INTEGER,
	CONSTRAINT PK_CLIENTE PRIMARY KEY (ID_CLIENTE),
	CONSTRAINT FK_CLIENTE_1 FOREIGN KEY (ID_CIDADE) REFERENCES CIDADE(ID_CIDADE),
	CONSTRAINT FK_CLIENTE_2 FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO(ID_ESTADO)
);

-- FORNECEDOR definição
CREATE TABLE FORNECEDOR (
	ID_FORNECEDOR INTEGER NOT NULL,
	RAZAO_SOCIAL VARCHAR(80),
	FANTASIA VARCHAR(80),
	CNPJ VARCHAR(20),
	EMAIL VARCHAR(255),
	ENDERECO VARCHAR(255),
	BAIRRO VARCHAR(40),
	ID_CIDADE INTEGER,
	ID_ESTADO INTEGER,
	DT_EXCLUIDO DATE,
	CONSTRAINT INTEG_22 PRIMARY KEY (ID_FORNECEDOR),
	CONSTRAINT INTEG_8 FOREIGN KEY (ID_CIDADE) REFERENCES CIDADE(ID_CIDADE),
	CONSTRAINT INTEG_9 FOREIGN KEY (ID_ESTADO) REFERENCES ESTADO(ID_ESTADO)
);

-- PRODUTO definição
CREATE TABLE PRODUTO (
	ID_PRODUTO INTEGER NOT NULL,
	DESCRICAO VARCHAR(80),
	QUANTIDADE FLOAT,
	CUSTO FLOAT,
	V_UNITARIO FLOAT,
	UNIDADE VARCHAR(4),
	PESO_LIQUIDO FLOAT,
	PESO_BRUTO FLOAT,
	FABRICANTE VARCHAR(60),
	MARCA_MODELO VARCHAR(255),
	ID_FORNECEDOR INTEGER,
	DT_EXCLUIDO DATE,
	CONSTRAINT INTEG_24 PRIMARY KEY (ID_PRODUTO),
	CONSTRAINT INTEG_25 FOREIGN KEY (ID_FORNECEDOR) REFERENCES FORNECEDOR(ID_FORNECEDOR)
);

-- VENDA_CAB definição
CREATE TABLE VENDA_CAB (
	ID_VENDA_CAB INTEGER NOT NULL,
	ID_CLIENTE INTEGER,
	"DATA" DATE,
	FATURADO VARCHAR(1),
	DATA_FATURADO DATE,
	DT_EXCLUIDO DATE,
	CONSTRAINT INTEG_27 PRIMARY KEY (ID_VENDA_CAB),
	CONSTRAINT FK_ID_CLIENTE_VENDA FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE)
);

-- VENDA_ITEM definição
CREATE TABLE VENDA_ITEM (
	ID_VENDA_ITEM INTEGER NOT NULL,
	ID_PRODUTO INTEGER,
	QTD FLOAT,
	VALOR_UNITARIO FLOAT,
	DESCONTO FLOAT,
	ID_VENDA_CAB INTEGER,
	DT_EXCLUIDO DATE,
	CONSTRAINT INTEG_29 PRIMARY KEY (ID_VENDA_ITEM),
	CONSTRAINT FK_ID_PRODUTO_V_ITEM FOREIGN KEY (ID_PRODUTO) REFERENCES PRODUTO(ID_PRODUTO),
	CONSTRAINT FK_VENDA_ITEM_CAB FOREIGN KEY (ID_VENDA_CAB) REFERENCES VENDA_CAB(ID_VENDA_CAB)
);

-- Generators

CREATE GENERATOR GEN_CIDADE_ID;

CREATE GENERATOR GEN_CLIENTE_ID;

CREATE GENERATOR GEN_ESTADO_ID;

CREATE GENERATOR GEN_FORNECEDOR_ID;

CREATE GENERATOR GEN_PRODUTO_ID;

CREATE GENERATOR GEN_USUARIO_ID;

CREATE GENERATOR GEN_VENDA_CAB_ID;

CREATE GENERATOR GEN_VENDA_ITEM_ID;

-- Triggers

SET TERM ^ ;

CREATE TRIGGER CIDADE_BI FOR CIDADE BEFORE INSERT
AS
BEGIN
  IF (NEW.ID_CIDADE IS NULL) THEN
    NEW.ID_CIDADE = GEN_ID(GEN_CIDADE_ID, 1);
END^

CREATE TRIGGER CLIENTE_BI FOR CLIENTE BEFORE INSERT
AS
BEGIN
  IF (NEW.ID_CLIENTE IS NULL) THEN
    NEW.ID_CLIENTE = GEN_ID(GEN_CLIENTE_ID, 1);
END^

CREATE TRIGGER ESTADO_BI FOR ESTADO BEFORE INSERT
AS
BEGIN
  IF (NEW.ID_ESTADO IS NULL) THEN
    NEW.ID_ESTADO = GEN_ID(GEN_ESTADO_ID, 1);
END^

CREATE TRIGGER FORNECEDOR_BI FOR FORNECEDOR BEFORE INSERT
AS
BEGIN
  IF (NEW.ID_FORNECEDOR IS NULL) THEN
    NEW.ID_FORNECEDOR = GEN_ID(GEN_FORNECEDOR_ID, 1);
END^

CREATE TRIGGER PRODUTO_BI FOR PRODUTO BEFORE INSERT
AS
BEGIN
  IF (NEW.ID_PRODUTO IS NULL) THEN
    NEW.ID_PRODUTO = GEN_ID(GEN_PRODUTO_ID, 1);
END^

CREATE TRIGGER USUARIO_BI FOR USUARIO BEFORE INSERT
AS
BEGIN
  IF (NEW.ID_USUARIO IS NULL) THEN
    NEW.ID_USUARIO = GEN_ID(GEN_USUARIO_ID, 1);
END^

CREATE TRIGGER VENDA_CAB_BI FOR VENDA_CAB BEFORE INSERT
AS
BEGIN
  IF (NEW.ID_VENDA_CAB IS NULL) THEN
    NEW.ID_VENDA_CAB = GEN_ID(GEN_VENDA_CAB_ID, 1);
END^

CREATE TRIGGER VENDA_ITEM_BI FOR VENDA_ITEM BEFORE INSERT
AS
BEGIN
  IF (NEW.ID_VENDA_ITEM IS NULL) THEN
    NEW.ID_VENDA_ITEM = GEN_ID(GEN_VENDA_ITEM_ID, 1);
END^

SET TERM ; ^


-- INSERE USUÁRIO ADMIN
INSERT INTO USUARIO (ID_USUARIO, NOME, LOGIN, SENHA)
VALUES (1, 'ADM-ADMIN', 'ADM', 'BCB5ABE8');
